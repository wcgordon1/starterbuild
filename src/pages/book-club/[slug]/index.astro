---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";

export async function getStaticPaths() {
  const books = await getCollection("book-club", ({ data }) => !data.bookSlug);
  console.log('Available books:', books.map(b => b.slug));
  return books.map((book) => ({
    params: { slug: book.slug },
    props: { book },
  }));
}

const { book } = Astro.props;
const { Content } = await book.render();
const chapters = await getCollection("book-club", ({ data }) => {
  return data.bookSlug === book.slug;
});

// Extract just the filename for each chapter
const processedChapters = chapters.map(chapter => ({
  ...chapter,
  simpleSlug: chapter.slug.split('/').pop()
}));

console.log('Chapters for', book.slug, ':', chapters.map(c => c.slug));
---

<Layout title={book.data.title}>
  <main>
    <div class="book-header">
      <h1>{book.data.title}</h1>
      <time>{new Date(book.data.pubDate).toLocaleDateString('en-US', { 
        year: 'numeric',
        month: 'short',
        day: 'numeric'
      })}</time>
    </div>
    
    <div class="book-info">
      {book.data.author && (
        <p class="author">By <a href={book.data.authorWiki} target="_blank">{book.data.author}</a></p>
      )}
      {book.data.overview && (
        <p class="overview">{book.data.overview}</p>
      )}
    </div>

    <div class="book-content">
      <Content />
    </div>

    <div class="chapters">
      <h2>Chapters</h2>
      {processedChapters.length > 0 ? (
        processedChapters.map((chapter) => (
          <div class="chapter-item">
            <a href={`/book-club/${book.slug}/${chapter.simpleSlug}`}>
              <h3 class="title">{chapter.data.title}</h3>
            </a>
          </div>
        ))
      ) : (
        <p>No chapters available yet.</p>
      )}
    </div>

    <style>
      .book-header {
        display: grid;
        grid-template-columns: 1fr auto;
        align-items: center;
        gap: 1rem;
      }

      .book-header h1 {
        margin: 0;
      }

      .book-header time {
        color: #666;
        font-size: 0.9rem;
      }

      @media (max-width: 600px) {
        .book-header {
          grid-template-columns: 1fr;
          gap: 0.5rem;
        }

        .book-header time {
          margin-top: -0.5rem;
        }
      }

      .book-info {
        margin: 2rem 0;
        padding: 1rem;
        background: #f5f5f5;
        border-radius: 8px;
      }

      .author {
        font-size: 1.2rem;
        margin: 0 0 1rem 0;
      }

      .author a {
        color: var(--accent);
        text-decoration: none;
      }

      .author a:hover {
        text-decoration: underline;
      }

      .overview {
        line-height: 1.6;
        margin: 0;
      }

      .chapters {
        margin-top: 2rem;
      }

      .chapter-item {
        margin-bottom: 1rem;
        border-bottom: 1px solid #ccc;
        padding: 1rem 0;
      }

      .chapter-item > a {
        text-decoration: none;
      }

      .chapter-item > a > h3 {
        margin: 0;
        font-size: 1rem;
        font-weight: 500;
        color: var(--black-light);
      }

      .chapter-item > a > h3:hover {
        color: var(--accent);
      }

      .chapter-item:last-child {
        border-bottom: none;
      }

      .book-content {
        margin: 2rem 0;
      }

      .book-content img {
        max-width: 100%;
        height: auto;
      }
    </style>
  </main>
</Layout> 